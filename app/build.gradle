apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'

def versionMajor = 0
def versionMinor = 1
def versionPatch = 0
def buildTime = new Date().format("yyyy-MM-dd'T'HH:mm'Z'", TimeZone.getTimeZone("UTC"))

def cfg = rootProject.ext.configuration
def libs = rootProject.ext.libraries;
def test = rootProject.ext.testingLibraries;

android {
    compileSdkVersion cfg.compileVersion
    buildToolsVersion cfg.buildToolsVersion

    defaultConfig {
        applicationId cfg.package
        minSdkVersion cfg.minSdk
        targetSdkVersion cfg.targetSdk
        versionCode versionMajor * 10000 + versionMinor * 100 + versionPatch
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        buildConfigField "String", "BUILD_TIME", "\"${buildTime}\""
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters 'armeabi-v7a', 'x86'
        }
        externalNativeBuild {
            cmake {
                arguments "-DPROJECT_DIR=${rootProject.projectDir}"
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }

    externalNativeBuild {
        cmake {
            path 'src/main/cpp/CMakeLists.txt'
        }
    }
}

repositories {
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url "https://repo.eclipse.org/content/repositories/paho-snapshots/" }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    provided "com.google.android.things:androidthings:${libs.things}"

    compile "com.android.support:appcompat-v7:${libs.supportVersion}"
    compile "com.android.support.constraint:constraint-layout:${libs.constraintLayout}"
    compile "com.android.support:design:${libs.supportVersion}"

    //compile "com.google.firebase:firebase-analytics:${libs.playServices}"
    compile "com.google.firebase:firebase-crash:${libs.playServices}"
    //compile "com.google.firebase:firebase-database:${libs.playServices}"

    compile "com.squareup.retrofit2:retrofit:${libs.retrofit}"
    compile "com.squareup.retrofit2:converter-gson:${libs.retrofit}"
    compile "com.squareup.retrofit2:adapter-rxjava2:2.1.1-SNAPSHOT"
    compile "com.squareup.okhttp3:logging-interceptor:${libs.okhttp}"

    compile "io.reactivex.rxjava2:rxandroid:${libs.rxandroid}"
    compile "io.reactivex.rxjava2:rxjava:${libs.rxjava}"

    compile "org.eclipse.paho:org.eclipse.paho.client.mqttv3:${libs.mqttv3}"
    compile "org.eclipse.paho:org.eclipse.paho.android.service:${libs.mqttAndroid}"

    // Test
    testCompile "junit:junit:${test.junit}"
    androidTestCompile "com.android.support:support-annotations:${libs.supportVersion}"
    androidTestCompile "com.android.support.test:runner:${test.runner}"
    androidTestCompile "com.android.support.test:rules:${test.rules}"
}

apply plugin: 'com.google.gms.google-services'